name: PHPunit Test

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  laravel-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ secrets.DB_DATABASE }}
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.DB_USERNAME }}" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    env:
      DB_CONNECTION: pgsql
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      APP_ENV: testing
      CACHE_DRIVER: array
      SESSION_DRIVER: array
      QUEUE_DRIVER: sync

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, pdo_pgsql, pgsql
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
        working-directory: ./src

      - name: Create .env file
        run: |
          cp .env.example .env
          php artisan key:generate
        working-directory: ./src

      - name: Wait for Postgres
        run: |
          until pg_isready -h 127.0.0.1 -p 5432 -U ci_test; do
            sleep 1
          done

      - name: Run migrations
        run: php artisan migrate --force
        working-directory: ./src

      - name: Run PHPunit
        id: PHPunit
        run: |
          OUTPUT=$(php artisan test 2>&1) || echo "FAILED=true" >> $GITHUB_ENV
          echo "$OUTPUT" > test_output.txt
        working-directory: ./src

      - name: Comment PR with Test Results
        if: env.FAILED == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('src/test_output.txt', 'utf8');
            const formatComment = (output) => {
              let comment = '## PHPunit テストで問題が検出されました ⚠️\n\n';
              comment += '```\n' + output + '\n```\n\n';
              return comment;
            };
            const formattedComment = formatComment(output);
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: formattedComment
            });

      - name: Fail if tests failed
        if: env.FAILED == 'true'
        run: exit 1