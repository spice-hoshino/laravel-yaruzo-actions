name: Laravel Lint with Pint

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  laravel-lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql
        coverage: none
        
    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
    - name: Cache composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
        
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      working-directory: ./src
      
    - name: Run Laravel Pint
      id: pint
      run: |
        PINT_OUTPUT=$(vendor/bin/pint --test -v 2>&1) || echo "PINT_FAILED=true" >> $GITHUB_ENV
        echo "$PINT_OUTPUT" > pint_output.txt
      working-directory: ./src

    - name: Comment PR with Pint issues
      if: env.PINT_FAILED == 'true'
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const pintOutput = fs.readFileSync('pint_output.txt', 'utf8');
          
          const formatComment = (output) => {
            // タイトル部分の作成
            let comment = '## Laravel Pint で問題が検出されました ⚠️\n\n';
            
            // コードブロックとしてPintの出力を追加
            comment += '```\n' + output + '\n```\n\n';
            
            // 解決方法の案内
            comment += '### 解決方法\n';
            comment += '- ローカル環境で `./vendor/bin/pint` を実行してコードスタイルを修正してください\n';
            comment += '- 修正後、変更をコミットしてプッシュしてください\n';
            
            return comment;
          };
          
          const formattedComment = formatComment(pintOutput);
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: formattedComment
          });

