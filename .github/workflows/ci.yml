name: CI

on:
  # pull_request:
  #   branches:
  #     - develop
  #     - main
  # push:
  #   branches:
  #     - develop
  #     - main

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
        ports:
          - 33306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      # リポジトリのチェックアウト
      - uses: actions/checkout@v4

      # PHPインストール
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4.7'
          extensions: mbstring, pdo, pdo_mysql, intl, fileinfo
          coverage: none

      # reviewdog
      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      # 依存パッケージインストール
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress
        working-directory: ./src

      # PRの差分ファイル名のみを抽出
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: |
            **/*.php
          separator: " "
          base_sha: 'develop'

      # # .envファイル作成
      # - name: Copy .env
      #   run: cp .env.example .env
      #   working-directory: ./src

      # # キー生成
      # - name: Generate key
      #   run: php artisan key:generate
      #   working-directory: ./src

      # # マイグレーション
      # - name: Run migrations
      #   run: php artisan migrate --force
      #   working-directory: ./src

      # # Pint Linter
      # - name: Run Pint (Linter)
      #   id: pint
      #   run: |
      #     ./vendor/bin/pint --test > pint-result.txt
      #     if grep -q "FAIL" pint-result.txt; then
      #       echo "pint_failed=true" >> $GITHUB_OUTPUT
      #     else
      #       echo "pint_failed=false" >> $GITHUB_OUTPUT
      #     fi
      #   working-directory: ./src
      #   continue-on-error: true

      # # Pint Linterの結果をログに表示
      # - name: Show Pint result in log
      #   run: cat pint-result.txt
      #   working-directory: ./src

      # # Pint Linterの結果を環境変数に設定
      # - name: Set Pint result as env
      #   id: pint-result
      #   run: |
      #     RESULT=$(cat pint-result.txt)
      #     echo "pint_result<<EOF" >> $GITHUB_ENV
      #     echo "$RESULT" >> $GITHUB_ENV
      #     echo "EOF" >> $GITHUB_ENV
      #   working-directory: ./src

      # # Pint Linterの結果をPRコメントに表示
      # - name: Post Pint result as PR comment
      #   if: steps.pint.outputs.pint_failed == 'true' && github.event_name == 'pull_request'
      #   uses: peter-evans/create-or-update-comment@v4
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     issue-number: ${{ github.event.pull_request.number }}
      #     body: |
      #       ## Pint Lint結果
      #       ```
      #       ${{ env.pint_result }}
      #       ```

      # # PHPStan
      # - name: Run PHPStan
      #   run: ./vendor/bin/phpstan analyse app
      #   working-directory: ./src

      # # PHPUnit
      # - name: Run PHPUnit
      #   run: ./vendor/bin/phpunit
      #   working-directory: ./src
      # VPNが必須の場合は、ここでVPN接続用のアクションやコマンドを追加してください
      # 例: - name: Connect to VPN
      #         run: sudo openvpn --config ${{ secrets.VPN_CONFIG }} 
